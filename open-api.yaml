openapi: 3.0.3
info:
  version: 1.0.0
  title: TRACK API Specification
  license:
    name: MIT
paths:
  /timers:
    get:
      summary: List all timers
      operationId: listTimers
      tags:
        - timers
      parameters:
        - in: query
          name: date
          schema:
            type: string
            format: date
          description: The Date for the timers to return
          required: true
          example: "2020-08-09"
      responses:
        "200":
          description: An array of timers
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Timers'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /totals/{year}/{week}:
    get:
      summary: List all timers
      operationId: listTotalsForYearAndWeek
      tags:
        - administration
      parameters:
        - in: path
          name: year
          schema:
            type: string
            example: 2020
          description: The year for the totals to return
          required: true
          example: "2020"
        - in: path
          name: week
          schema:
            type: string
            example: 03
          description: The week for the totals to return
          required: true
          example: "03"
      responses:
        "200":
          description: The totals for a given year + week
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WeekTotals'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

components:
  schemas:
    Timer:
      type: object
      required:
        - id
        - isRunning
        - timeRecorded
        - createdAt
        - date
        - note
        - gitlab
        - formatted
      properties:
        id:
          type: integer
          format: int64
        note:
          type: string
        isRunning:
          type: boolean
        timeRecorded:
          type: integer
          format: int64
        createdAt:
          description: Date the timer is create
          type: string
          format: date-time
        date:
          description: Date the timer is for
          type: string
          format: date
        gitlab:
          type: object
          properties:
            reference:
              type: string
              nullable: true
        formatted:
          type: object
          properties:
            hours:
              type: string
            minutes:
              type: string
    Timers:
      type: array
      items:
        $ref: '#/components/schemas/Timer'
      example:
        - id: 1
          isRunning: true
          timeRecorded: 9780
          createdAt: 2020-08-15T23:19:43+01:00
          date: 2020-08-15
          note: some test note
          gitlab:
            reference: group/sub-group/project-name#10
          formatted:
            hours: 02
            minutes: 43
        - id: 2
          isRunning: true
          timeRecorded: 9780
          createdAt: 2020-08-15T23:19:43+01:00
          date: 2020-08-15
          note: some test note
          gitlab:
            reference: group/sub-group/project-name#10
          formatted:
            $ref: '#/components/schemas/FormattedTime'
    WeekTotals:
      type: object
      required:
        - totalHours
        - weekDayTotals
      properties:
        totalHours:
          $ref: '#/components/schemas/FormattedTime'
        weekDayTotals:
          type: array
          items:
            type: object
            properties:
              date:
                description: Date the timer is for
                type: string
                format: date
              totalHours:
                $ref: '#/components/schemas/FormattedTime'
    FormattedTime:
      type: object
      properties:
        hours:
          type: string
          example: "22"
        minutes:
          type: string
          example: "30"
    Error:
      type: "object"
      required:
        - code
        - message
      properties:
        code:
          type: integer
          format: int32
        message:
          type: string
